name: Linux
on: [ push, pull_request ]

jobs:
  linux:
    name: Linux ( Ubuntu )
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        CONFIG:
          - {
            BUILD_TYPE: Release,
            CC: gcc-12,
            CXX: g++-12
          }
          - {
            BUILD_TYPE: Debug,
            CC: gcc-12,
            CXX: g++-12
          }
          - {
            BUILD_TYPE: Release,
            CC: clang-14,
            CXX: clang++-14
          }
          - {
            BUILD_TYPE: Debug,
            CC: clang-14,
            CXX: clang++-14
          }
    steps:
      - name: Install dependencies
        run: |
          pip install conan==1.59.0 gcovr
          sudo apt-get update
          sudo apt-get install -y libudev-dev libgl-dev libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev

      - name: Clone the git repo
        uses: actions/checkout@v2
        with:
          path: project
          fetch-depth: 50

      - name: Create project build directory
        working-directory: project
        run: |
          mkdir build

      - name: Configure project
        working-directory: project
        run: cmake -Bbuild
          -DCMAKE_BUILD_TYPE="${{ matrix.CONFIG.BUILD_TYPE }}"
          -DCMAKE_C_COMPILER="${{ matrix.CONFIG.CC }}"
          -DCMAKE_CXX_COMPILER="${{ matrix.CONFIG.CXX }}" .

      - name: Build project
        working-directory: project
        run: cmake --build ./build --config ${{ matrix.CONFIG.BUILD_TYPE }}  -- -j $(nproc --all)

      - name: Run tests
        working-directory: project/build
        run:
          if [ "${{ matrix.CONFIG.BUILD_TYPE }}" == "Debug" ]; then
          cd tests && ctest -C ${{ matrix.CONFIG.BUILD_TYPE }} --output-on-failure --timeout 540;
          else
          echo "No test on Release Build type";
          fi
